{"ast":null,"code":"var _jsxFileName = \"/Users/vikabber/Desktop/Projects/Projects/BookMyConsultationUI/src/screens/login/Login.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { FormControl, InputLabel, Input, Button, Paper } from '@material-ui/core';\nimport './Login.css';\nconst Login = ({\n  onLogin,\n  onClose\n}) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const emailInputRef = useRef(null);\n  const passwordInputRef = useRef(null);\n  useEffect(() => {\n    if (emailError && emailInputRef.current) {\n      emailInputRef.current.focus();\n    }\n    if (passwordError && passwordInputRef.current) {\n      passwordInputRef.current.focus();\n    }\n  }, [emailError, passwordError]);\n  const handleLogin = async () => {\n    onClose();\n\n    // // Reset errors\n    // setEmailError('');\n    // setPasswordError('');\n\n    // // Basic validation\n    // if (!email) {\n    //     setEmailError('Please fill out this field');\n    //     return;\n    // }\n    // if (!password) {\n    //     setPasswordError('Please fill out this field');\n    //     return;\n    // }\n\n    // try {\n    //     // Construct basic authentication token\n    //     const basicAuthToken = btoa(`${email}:${password}`);\n    //     console.log(basicAuthToken);\n    //     const response = await fetch('http://localhost:8080/auth/login', {\n    //         method: 'POST',\n    //         headers: {\n    //             'Authorization': `Basic ${basicAuthToken}`,\n    //             'Content-Type': 'application/json',\n    //         }\n    //     });\n\n    //     // Retrieve the access token from the response\n    //     const data = await response.json();\n    //     if (!response.ok) {\n    //         if(data.message === \"Username does not exist\"){\n    //             setEmailError('Enter valid Email');\n    //         }\n    //         setPasswordError(\"Invalid credentials\");\n    //         console.log(data.message);\n    //         return;\n    //     }\n    //     const accessToken = data.accessToken.trim();\n    //     const userId = data.id;\n    //     const userName = btoa(`${data.firstName} ${data.lastName}`); \n    //     const userEmailId = data.emailAddress;\n    //     console.log(data);\n    //     // Store the access token in localStorage or sessionStorage\n    //     localStorage.setItem('accessToken', accessToken);\n    //     localStorage.setItem('isLoggedIn', true);\n    //     localStorage.setItem('userId', userId);\n    //     localStorage.setItem('userName', userName);\n    //     localStorage.setItem('userEmailId', userEmailId);\n\n    //     // Navigate to the home page\n    //     // code to be implemented\n\n    // } catch (error) {\n    //     console.error('Login failed:', error);\n    //     setPasswordError('Failed to Login in');\n    // }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \"Email *\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"email\",\n    type: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    inputRef: emailInputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }), emailError && email.length == 0 && /*#__PURE__*/React.createElement(Paper, {\n    className: \"error-popup\",\n    elevation: 3,\n    style: {\n      backgroundColor: 'black',\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, emailError)), email.length > 0 && emailError === \"Enter valid Email\" && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 74\n    }\n  }, emailError)), /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"Password *\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"password\",\n    type: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    inputRef: passwordInputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }), passwordError === \"Invalid credentials\" && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 59\n    }\n  }, \"Invalid credentials\"), passwordError && password.length == 0 && /*#__PURE__*/React.createElement(Paper, {\n    className: \"error-popup\",\n    elevation: 3,\n    style: {\n      backgroundColor: 'black',\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, passwordError))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      margin: 'auto',\n      display: 'block',\n      marginTop: '25px'\n    },\n    onClick: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \"LOGIN\"));\n};\nexport default Login;","map":{"version":3,"names":["React","useState","useRef","useEffect","FormControl","InputLabel","Input","Button","Paper","Login","onLogin","onClose","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","emailInputRef","passwordInputRef","current","focus","handleLogin","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","margin","htmlFor","id","type","value","onChange","e","target","inputRef","length","elevation","style","backgroundColor","color","variant","display","marginTop","onClick"],"sources":["/Users/vikabber/Desktop/Projects/Projects/BookMyConsultationUI/src/screens/login/Login.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { FormControl, InputLabel, Input, Button, Paper } from '@material-ui/core';\nimport './Login.css';\n\nconst Login = ({ onLogin, onClose }) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [emailError, setEmailError] = useState('');\n    const [passwordError, setPasswordError] = useState('');\n    const emailInputRef = useRef(null);\n    const passwordInputRef = useRef(null);\n\n    useEffect(() => {\n        if (emailError && emailInputRef.current) {\n            emailInputRef.current.focus();\n        }\n        if (passwordError && passwordInputRef.current) {\n            passwordInputRef.current.focus();\n        }\n    }, [emailError, passwordError]);\n\n    const handleLogin = async () => {\n\n        onClose();\n\n        // // Reset errors\n        // setEmailError('');\n        // setPasswordError('');\n\n        // // Basic validation\n        // if (!email) {\n        //     setEmailError('Please fill out this field');\n        //     return;\n        // }\n        // if (!password) {\n        //     setPasswordError('Please fill out this field');\n        //     return;\n        // }\n\n        // try {\n        //     // Construct basic authentication token\n        //     const basicAuthToken = btoa(`${email}:${password}`);\n        //     console.log(basicAuthToken);\n        //     const response = await fetch('http://localhost:8080/auth/login', {\n        //         method: 'POST',\n        //         headers: {\n        //             'Authorization': `Basic ${basicAuthToken}`,\n        //             'Content-Type': 'application/json',\n        //         }\n        //     });\n\n        //     // Retrieve the access token from the response\n        //     const data = await response.json();\n        //     if (!response.ok) {\n        //         if(data.message === \"Username does not exist\"){\n        //             setEmailError('Enter valid Email');\n        //         }\n        //         setPasswordError(\"Invalid credentials\");\n        //         console.log(data.message);\n        //         return;\n        //     }\n        //     const accessToken = data.accessToken.trim();\n        //     const userId = data.id;\n        //     const userName = btoa(`${data.firstName} ${data.lastName}`); \n        //     const userEmailId = data.emailAddress;\n        //     console.log(data);\n        //     // Store the access token in localStorage or sessionStorage\n        //     localStorage.setItem('accessToken', accessToken);\n        //     localStorage.setItem('isLoggedIn', true);\n        //     localStorage.setItem('userId', userId);\n        //     localStorage.setItem('userName', userName);\n        //     localStorage.setItem('userEmailId', userEmailId);\n\n        //     // Navigate to the home page\n        //     // code to be implemented\n            \n        // } catch (error) {\n        //     console.error('Login failed:', error);\n        //     setPasswordError('Failed to Login in');\n        // }\n    };\n\n\n    return (\n        <div className=\"login-modal\">\n            <FormControl fullWidth margin=\"normal\">\n                <InputLabel htmlFor=\"email\">Email *</InputLabel>\n                <Input\n                    id=\"email\"\n                    type=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    inputRef={emailInputRef}\n                />\n                {emailError && email.length==0 &&\n                    <Paper className=\"error-popup\" elevation={3} style={{ backgroundColor: 'black', color: 'white' }}>\n                        <span>{emailError}</span>\n                    </Paper>\n                }\n                {email.length > 0 && emailError===\"Enter valid Email\" && <span className=\"error\">{emailError}</span>}\n            </FormControl>\n            <FormControl fullWidth margin=\"normal\">\n                <InputLabel htmlFor=\"password\">Password *</InputLabel>\n                <Input\n                    id=\"password\"\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    inputRef={passwordInputRef}\n                />\n                {passwordError===\"Invalid credentials\" && <span className=\"error\">Invalid credentials</span>}\n                {passwordError && password.length ==0 &&\n                    <Paper className=\"error-popup\" elevation={3} style={{ backgroundColor: 'black', color: 'white' }}>\n                        <span>{passwordError}</span>\n                    </Paper>\n                }\n            </FormControl>\n            <Button variant=\"contained\" color=\"primary\" style={{ margin: 'auto', display: 'block', marginTop:'25px' }} onClick={handleLogin}>\n                LOGIN\n            </Button>\n        </div>\n    );\n}\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/vikabber/Desktop/Projects/Projects/BookMyConsultationUI/src/screens/doctorList/DoctorList.js\";\nimport React, { useState } from 'react';\nimport { Paper, Typography, Button } from '@material-ui/core';\nimport BookAppointment from './BookAppointment'; // Import BookAppointment component\nimport DoctorDetails from './DoctorDetails'; // Import DoctorDetails component\nimport './DoctorList.css'; // Import your DoctorList CSS file\n\nconst DoctorList = ({\n  doctors\n}) => {\n  const [selectedSpeciality, setSelectedSpeciality] = useState('');\n  const [selectedDoctor, setSelectedDoctor] = useState(null); // State to track selected doctor\n  const [isModalOpen, setIsModalOpen] = useState(false); // State to manage modal visibility\n  const [isDetailsModalOpen, setIsDetailsModalOpen] = useState(false); // State to manage DoctorDetails modal visibility\n\n  const handleSpecialityChange = event => {\n    setSelectedSpeciality(event.target.value);\n  };\n  const handleBookAppointment = doctor => {\n    setSelectedDoctor(doctor);\n    setIsModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n  const handleViewDetails = doctor => {\n    setSelectedDoctor(doctor);\n    setIsDetailsModalOpen(true);\n  };\n  const handleCloseDetailsModal = () => {\n    setIsDetailsModalOpen(false);\n  };\n  const getAddress = async () => {\n    try {\n      const loginToken = localStorage.getItem('loginToken');\n      await fetch('http://localhost:8080/api/addresses', {\n        method: 'GET',\n        headers: {\n          'x-auth-token': loginToken\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n        //console.log(\"Address reterived : \" + data.id);\n        console.log(data.length);\n        setaddressArray(data);\n      }).catch(error => console.log(error));\n    } catch {}\n  };\n  useEffect(() => {\n    getAddress();\n  }, []);\n  const filteredDoctors = selectedSpeciality ? doctors.filter(doctor => doctor.speciality === selectedSpeciality) : doctors;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DoctorsTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Select Speciality: \"), /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedSpeciality,\n    onChange: handleSpecialityChange,\n    className: \"speciality-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"All Specialities\"), Array.from(new Set(doctors.map(doctor => doctor.speciality))).map((speciality, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: speciality,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, speciality))), filteredDoctors.map((doctor, index) => /*#__PURE__*/React.createElement(Paper, {\n    key: index,\n    elevation: 3,\n    className: \"doctor-paper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Doctor Name: \", doctor.name), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 75\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"Speciality: \", doctor.speciality), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Average Rating: \", doctor.rating), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: \"book-appointment-button\",\n    onClick: () => handleBookAppointment(doctor) // Handle booking appointment\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Book Appointment\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    style: {\n      backgroundColor: 'green',\n      color: 'white'\n    },\n    className: \"view-details-button\",\n    onClick: () => handleViewDetails(doctor) // Handle viewing details\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"View Details\")))), /*#__PURE__*/React.createElement(BookAppointment, {\n    open: isModalOpen,\n    handleClose: handleCloseModal,\n    doctor: selectedDoctor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DoctorDetails, {\n    open: isDetailsModalOpen,\n    handleClose: handleCloseDetailsModal,\n    doctor: selectedDoctor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }));\n};\nexport default DoctorList;","map":{"version":3,"names":["React","useState","Paper","Typography","Button","BookAppointment","DoctorDetails","DoctorList","doctors","selectedSpeciality","setSelectedSpeciality","selectedDoctor","setSelectedDoctor","isModalOpen","setIsModalOpen","isDetailsModalOpen","setIsDetailsModalOpen","handleSpecialityChange","event","target","value","handleBookAppointment","doctor","handleCloseModal","handleViewDetails","handleCloseDetailsModal","getAddress","loginToken","localStorage","getItem","fetch","method","headers","then","response","json","data","console","log","length","setaddressArray","catch","error","useEffect","filteredDoctors","filter","speciality","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onChange","Array","from","Set","map","index","key","elevation","variant","name","rating","color","onClick","style","backgroundColor","open","handleClose"],"sources":["/Users/vikabber/Desktop/Projects/Projects/BookMyConsultationUI/src/screens/doctorList/DoctorList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Paper, Typography, Button } from '@material-ui/core';\nimport BookAppointment from './BookAppointment'; // Import BookAppointment component\nimport DoctorDetails from './DoctorDetails'; // Import DoctorDetails component\nimport './DoctorList.css'; // Import your DoctorList CSS file\n\nconst DoctorList = ({ doctors }) => {\n  const [selectedSpeciality, setSelectedSpeciality] = useState('');\n  const [selectedDoctor, setSelectedDoctor] = useState(null); // State to track selected doctor\n  const [isModalOpen, setIsModalOpen] = useState(false); // State to manage modal visibility\n  const [isDetailsModalOpen, setIsDetailsModalOpen] = useState(false); // State to manage DoctorDetails modal visibility\n\n  const handleSpecialityChange = (event) => {\n    setSelectedSpeciality(event.target.value);\n  };\n\n  const handleBookAppointment = (doctor) => {\n    setSelectedDoctor(doctor);\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleViewDetails = (doctor) => {\n    setSelectedDoctor(doctor);\n    setIsDetailsModalOpen(true);\n  };\n\n  const handleCloseDetailsModal = () => {\n    setIsDetailsModalOpen(false);\n  };\n\n  const getAddress = async () =>{\n    try{\n        const loginToken = localStorage.getItem('loginToken');\n        await fetch ('http://localhost:8080/api/addresses',\n        {\n            method :'GET',\n            headers :{\n                'x-auth-token': loginToken\n            }\n        })\n        .then(response => response.json())\n            .then(data => {\n                console.log(data);\n                //console.log(\"Address reterived : \" + data.id);\n                console.log(data.length);\n                setaddressArray(data);\n            })\n            .catch(error => console.log(error));\n    }\n    catch{\n\n    }\n}\nuseEffect(()=>{\n    getAddress();\n},[])\n\n  const filteredDoctors = selectedSpeciality\n    ? doctors.filter((doctor) => doctor.speciality === selectedSpeciality)\n    : doctors;\n\n  return (\n    <div className=\"DoctorsTab\">\n      <label>Select Speciality: </label>\n      <select value={selectedSpeciality} onChange={handleSpecialityChange} className=\"speciality-dropdown\">\n        <option value=\"\">All Specialities</option>\n        {Array.from(new Set(doctors.map((doctor) => doctor.speciality))).map((speciality, index) => (\n          <option key={index} value={speciality}>{speciality}</option>\n        ))}\n      </select>\n      {filteredDoctors.map((doctor, index) => (\n        <Paper key={index} elevation={3} className=\"doctor-paper\">\n          <Typography variant=\"h6\">Doctor Name: {doctor.name}</Typography><br/>\n          <Typography variant=\"subtitle1\">Speciality: {doctor.speciality}</Typography>\n          <Typography variant=\"subtitle1\">Average Rating: {doctor.rating}</Typography>\n          <div className=\"button-container\">\n            <Button \n              variant=\"contained\" \n              color=\"primary\" \n              className=\"book-appointment-button\" \n              onClick={() => handleBookAppointment(doctor)} // Handle booking appointment\n            >\n              Book Appointment\n            </Button>\n            <Button \n              variant=\"contained\" \n              style={{ backgroundColor: 'green', color: 'white' }} \n              className=\"view-details-button\"\n              onClick={() => handleViewDetails(doctor)} // Handle viewing details\n            >\n              View Details\n            </Button>\n          </div>\n        </Paper>\n      ))}\n      {/* Render BookAppointment modal */}\n      <BookAppointment open={isModalOpen} handleClose={handleCloseModal} doctor={selectedDoctor} />\n      {/* Render DoctorDetails modal */}\n      <DoctorDetails open={isDetailsModalOpen} handleClose={handleCloseDetailsModal} doctor={selectedDoctor} />\n    </div>\n  );\n};\n\nexport default DoctorList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
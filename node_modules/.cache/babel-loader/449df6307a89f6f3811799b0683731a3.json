{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { Paper, Typography, Button } from '@material-ui/core';\n// import BookAppointment from './BookAppointment';\n// import DoctorDetails from './DoctorDetails'; \n// import './DoctorList.css'; \n// import renderRatingStars from '../../common/utils/utils';\n\n// const DoctorList = ({ doctors }) => {\n//   const [selectedDoctor, setSelectedDoctor] = useState(null); // State to track selected doctor\n//   const [isModalOpen, setIsModalOpen] = useState(false); // State to manage modal visibility\n//   const [isDetailsModalOpen, setIsDetailsModalOpen] = useState(false); // State to manage DoctorDetails modal visibility\n//   const [selectedSpeciality, setSelectedSpeciality] = useState('');\n//   const [specialities, setSpecialities] = useState([]);\n//   const [selectedDoctorName, setSelectedDoctorName] = useState(null);\n\n//   const handleSpecialityChange = (event) => {\n//     setSelectedSpeciality(event.target.value.toLowerCase());\n//   };\n\n//   const handleBookAppointment = async (doctor_name) => {\n//     await new Promise(resolve => setTimeout(resolve, 1000));\n//     localStorage.removeItem('choosenDoctorName');\n//     localStorage.setItem('choosenDoctorName', doctor_name);\n//     const choosenDoctorName = localStorage.getItem('choosenDoctorName');\n//     console.log(\"choosenDoctorName doctor_name:\", doctor_name);\n//     console.log(\"choosenDoctorName Doctor:\", choosenDoctorName);\n//     setSelectedDoctorName(choosenDoctorName);\n//     // await new Promise(resolve => setTimeout(resolve, 1000));\n//     // console.log(\"handleBookAppointment Doctor:\", selectedDoctorName);\n//     setIsModalOpen(true);\n//   };\n\n//   useEffect(() => {\n//     // This effect runs after setSelectedDoctorName has updated the state\n//     console.log(\"handleBookAppointment Doctor vidya:\", selectedDoctorName);\n//   }, [selectedDoctorName]); // Add selectedDoctorName to the dependency array\n\n//   const handleCloseModal = () => {\n//     setIsModalOpen(false);\n//   };\n\n//   const handleViewDetails = async (doctor) => {\n//       await new Promise(resolve => setTimeout(resolve, 1000));\n//       setSelectedDoctor(doctor);\n//       console.log(\"Selected Doctor:\", selectedDoctor);\n//       setIsDetailsModalOpen(true);\n//   };\n\n//   const handleCloseDetailsModal = () => {\n//     setIsDetailsModalOpen(false);\n//   };\n\n//   const getSpecialities = async () => {\n//     try {\n//       const response = await fetch('http://localhost:8080/doctors/speciality'); // Assuming this is the correct endpoint\n//       const data = await response.json();\n//       setSpecialities(data);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     getSpecialities();\n//   }, []);\n\n//   useEffect(() => {\n//     console.log('Selected Doctor:', selectedDoctor);\n//     // Perform any action here to pass selectedDoctor to the next page\n//   }, [selectedDoctor]);\n\n//   const filteredDoctors = selectedSpeciality\n//     ? doctors.filter((doctor) => doctor.speciality.toLowerCase() === selectedSpeciality)\n//     : doctors;\n\n//   return (\n//     <div className=\"DoctorsTab\">\n//       <label>Select Speciality: </label>\n//       <select value={selectedSpeciality} onChange={handleSpecialityChange} className=\"speciality-dropdown\">\n//         <option value=\"\">All Specialities</option>\n//         {specialities.map((speciality, index) => (\n//           <option key={index} value={speciality.toLowerCase()}>{speciality}</option>\n//         ))}\n//       </select>\n//       {filteredDoctors.length > 0 ? (\n//         filteredDoctors.map((doctor, index) => (\n//           <Paper key={index} elevation={3} className=\"doctor-paper\">\n//             <Typography variant=\"h6\">Doctor Name: {doctor.firstName} {doctor.lastName}</Typography><br />\n//             <Typography variant=\"subtitle1\">Speciality: {doctor.speciality}</Typography>\n//             <Typography variant=\"subtitle1\">Average Rating: {renderRatingStars(doctor.rating)}</Typography>\n//             <div className=\"button-container\">\n//               <Button\n//                 variant=\"contained\"\n//                 color=\"primary\"\n//                 className=\"book-appointment-button\"\n//                 onClick={() => handleBookAppointment(doctor.firstName)} // Handle booking appointment\n//               >\n//                 Book Appointment\n//               </Button>\n//               <Button\n//                 variant=\"contained\"\n//                 style={{ backgroundColor: 'green', color: 'white' }}\n//                 className=\"view-details-button\"\n//                 onClick={() => handleViewDetails(doctor)} // Handle viewing details\n//               >\n//                 View Details\n//               </Button>\n//             </div>\n//           </Paper>\n//         ))\n//       ) : (\n//         <Typography variant=\"subtitle1\" className=\"no-doctors-found\">\n//           No doctors found for the selected speciality.\n//         </Typography>\n//       )}\n//       {/* Render BookAppointment modal */}\n//       <BookAppointment open={isModalOpen} handleClose={handleCloseModal} doctor={selectedDoctorName}/>\n//       {/* Render DoctorDetails modal */}\n//       <DoctorDetails open={isDetailsModalOpen} handleClose={handleCloseDetailsModal} doctor={selectedDoctor} />\n//     </div>\n//   );\n// };\n\n// export default DoctorList;","map":{"version":3,"names":[],"sources":["/Users/vikabber/Desktop/Projects/Projects/BookMyConsultationUI/src/screens/doctorList/DoctorList.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { Paper, Typography, Button } from '@material-ui/core';\n// import BookAppointment from './BookAppointment';\n// import DoctorDetails from './DoctorDetails'; \n// import './DoctorList.css'; \n// import renderRatingStars from '../../common/utils/utils';\n\n\n// const DoctorList = ({ doctors }) => {\n//   const [selectedDoctor, setSelectedDoctor] = useState(null); // State to track selected doctor\n//   const [isModalOpen, setIsModalOpen] = useState(false); // State to manage modal visibility\n//   const [isDetailsModalOpen, setIsDetailsModalOpen] = useState(false); // State to manage DoctorDetails modal visibility\n//   const [selectedSpeciality, setSelectedSpeciality] = useState('');\n//   const [specialities, setSpecialities] = useState([]);\n//   const [selectedDoctorName, setSelectedDoctorName] = useState(null);\n\n//   const handleSpecialityChange = (event) => {\n//     setSelectedSpeciality(event.target.value.toLowerCase());\n//   };\n\n//   const handleBookAppointment = async (doctor_name) => {\n//     await new Promise(resolve => setTimeout(resolve, 1000));\n//     localStorage.removeItem('choosenDoctorName');\n//     localStorage.setItem('choosenDoctorName', doctor_name);\n//     const choosenDoctorName = localStorage.getItem('choosenDoctorName');\n//     console.log(\"choosenDoctorName doctor_name:\", doctor_name);\n//     console.log(\"choosenDoctorName Doctor:\", choosenDoctorName);\n//     setSelectedDoctorName(choosenDoctorName);\n//     // await new Promise(resolve => setTimeout(resolve, 1000));\n//     // console.log(\"handleBookAppointment Doctor:\", selectedDoctorName);\n//     setIsModalOpen(true);\n//   };\n\n//   useEffect(() => {\n//     // This effect runs after setSelectedDoctorName has updated the state\n//     console.log(\"handleBookAppointment Doctor vidya:\", selectedDoctorName);\n//   }, [selectedDoctorName]); // Add selectedDoctorName to the dependency array\n\n//   const handleCloseModal = () => {\n//     setIsModalOpen(false);\n//   };\n\n//   const handleViewDetails = async (doctor) => {\n//       await new Promise(resolve => setTimeout(resolve, 1000));\n//       setSelectedDoctor(doctor);\n//       console.log(\"Selected Doctor:\", selectedDoctor);\n//       setIsDetailsModalOpen(true);\n//   };\n\n//   const handleCloseDetailsModal = () => {\n//     setIsDetailsModalOpen(false);\n//   };\n\n//   const getSpecialities = async () => {\n//     try {\n//       const response = await fetch('http://localhost:8080/doctors/speciality'); // Assuming this is the correct endpoint\n//       const data = await response.json();\n//       setSpecialities(data);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     getSpecialities();\n//   }, []);\n\n//   useEffect(() => {\n//     console.log('Selected Doctor:', selectedDoctor);\n//     // Perform any action here to pass selectedDoctor to the next page\n//   }, [selectedDoctor]);\n\n\n//   const filteredDoctors = selectedSpeciality\n//     ? doctors.filter((doctor) => doctor.speciality.toLowerCase() === selectedSpeciality)\n//     : doctors;\n\n//   return (\n//     <div className=\"DoctorsTab\">\n//       <label>Select Speciality: </label>\n//       <select value={selectedSpeciality} onChange={handleSpecialityChange} className=\"speciality-dropdown\">\n//         <option value=\"\">All Specialities</option>\n//         {specialities.map((speciality, index) => (\n//           <option key={index} value={speciality.toLowerCase()}>{speciality}</option>\n//         ))}\n//       </select>\n//       {filteredDoctors.length > 0 ? (\n//         filteredDoctors.map((doctor, index) => (\n//           <Paper key={index} elevation={3} className=\"doctor-paper\">\n//             <Typography variant=\"h6\">Doctor Name: {doctor.firstName} {doctor.lastName}</Typography><br />\n//             <Typography variant=\"subtitle1\">Speciality: {doctor.speciality}</Typography>\n//             <Typography variant=\"subtitle1\">Average Rating: {renderRatingStars(doctor.rating)}</Typography>\n//             <div className=\"button-container\">\n//               <Button\n//                 variant=\"contained\"\n//                 color=\"primary\"\n//                 className=\"book-appointment-button\"\n//                 onClick={() => handleBookAppointment(doctor.firstName)} // Handle booking appointment\n//               >\n//                 Book Appointment\n//               </Button>\n//               <Button\n//                 variant=\"contained\"\n//                 style={{ backgroundColor: 'green', color: 'white' }}\n//                 className=\"view-details-button\"\n//                 onClick={() => handleViewDetails(doctor)} // Handle viewing details\n//               >\n//                 View Details\n//               </Button>\n//             </div>\n//           </Paper>\n//         ))\n//       ) : (\n//         <Typography variant=\"subtitle1\" className=\"no-doctors-found\">\n//           No doctors found for the selected speciality.\n//         </Typography>\n//       )}\n//       {/* Render BookAppointment modal */}\n//       <BookAppointment open={isModalOpen} handleClose={handleCloseModal} doctor={selectedDoctorName}/>\n//       {/* Render DoctorDetails modal */}\n//       <DoctorDetails open={isDetailsModalOpen} handleClose={handleCloseDetailsModal} doctor={selectedDoctor} />\n//     </div>\n//   );\n// };\n\n// export default DoctorList;\n\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}
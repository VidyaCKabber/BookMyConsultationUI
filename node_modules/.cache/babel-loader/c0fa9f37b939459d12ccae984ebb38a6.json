{"ast":null,"code":"var _jsxFileName = \"/Users/vikabber/Desktop/Projects/Projects/BookMyConsultationUI/src/screens/register/Register.js\";\n// Register.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport { FormControl, InputLabel, Input, Button, Paper } from '@material-ui/core';\nimport './Register.css';\nconst Register = () => {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [contactNumber, setContactNumber] = useState('');\n  const [firstNameError, setFirstNameError] = useState('');\n  const [lastNameError, setLastNameError] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [contactNumberError, setContactNumberError] = useState('');\n  const [registrationMessage, setRegistrationMessage] = useState('');\n  const firstNameInputRef = useRef(null);\n  const lastNameInputRef = useRef(null);\n  const emailInputRef = useRef(null);\n  const passwordInputRef = useRef(null);\n  const contactNumberInputRef = useRef(null);\n  useEffect(() => {\n    if (firstNameError) {\n      firstNameInputRef.current.focus();\n    }\n    if (lastNameError) {\n      lastNameInputRef.current.focus();\n    }\n    if (emailError) {\n      emailInputRef.current.focus();\n    }\n    if (passwordError) {\n      passwordInputRef.current.focus();\n    }\n    if (contactNumberError) {\n      contactNumberInputRef.current.focus();\n    }\n  }, [firstNameError, lastNameError, emailError, passwordError, contactNumberError]);\n  const handleRegister = async () => {\n    const emptyFieldErrorMsg = 'Please fill out this field';\n    // Reset errors and messages\n    setFirstNameError('');\n    setLastNameError('');\n    setEmailError('');\n    setPasswordError('');\n    setContactNumberError('');\n    setRegistrationMessage('');\n\n    // Basic validation\n    if (!firstName) {\n      setFirstNameError(emptyFieldErrorMsg);\n      return;\n    }\n    if (!lastName) {\n      setLastNameError(emptyFieldErrorMsg);\n      return;\n    }\n    if (!email) {\n      setEmailError(emptyFieldErrorMsg);\n      return;\n    }\n    if (!password) {\n      setPasswordError(emptyFieldErrorMsg);\n      return;\n    }\n    if (!contactNumber) {\n      setContactNumberError(emptyFieldErrorMsg);\n      return;\n    }\n    // if (!isValidContactNumber(contactNumber)) {\n    //     setContactNumberError('Enter a valid mobile number.');\n    //     return;\n    // }\n    if (!isValidEmail(email)) {\n      setEmailError('Enter a valid email.');\n      return;\n    }\n    try {\n      const signInData = {\n        firstName: firstName,\n        lastName: lastName,\n        mobile: contactNumber,\n        password: password,\n        emailId: email\n      };\n      const response = await fetch('http://localhost:8080/users/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(signInData)\n      });\n      if (!response.ok) {\n        throw new Error('Registration failed. Please try again.');\n      }\n\n      // Registration successful\n      setRegistrationMessage('Registration Successful');\n      const loginResponse = await fetch('http://localhost:8080/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        }) // Use registered email and password for login\n      });\n      if (!loginResponse.ok) {\n        throw new Error('Login failed. Please try again.');\n      }\n\n      // Assuming login is successful, extract and store the authentication token\n      const loginData = await loginResponse.json();\n      const authToken = loginData.authToken; // Adjust according to your server response\n      alert(authToken);\n      // Store the authentication token in localStorage\n      localStorage.setItem('authToken', authToken);\n      // localStorage.setItem('isLoggedIn', true);\n      // localStorage.setItem('userId', userId);\n      // localStorage.setItem('userName', userName);\n      // localStorage.setItem('userEmailId', userEmailId);\n\n      // Clear input fields after successful registration\n      setFirstName('');\n      setLastName('');\n      setEmail('');\n      setPassword('');\n      setContactNumber('');\n    } catch (error) {\n      console.error('Registration failed:', error.message);\n      setRegistrationMessage(error.message || 'Registration failed. Please try again.');\n    }\n  };\n  const isValidContactNumber = contactNumber => {\n    const contactNumberRegex = /^\\d{10}$/;\n    return contactNumberRegex.test(contactNumber);\n  };\n  const isValidEmail = email => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"register-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, \"First Name *\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"firstName\",\n    type: \"text\",\n    value: firstName,\n    onChange: e => setFirstName(e.target.value),\n    inputRef: firstNameInputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }), firstNameError && /*#__PURE__*/React.createElement(Paper, {\n    className: \"error-popup\",\n    elevation: 3,\n    style: {\n      backgroundColor: 'black',\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 25\n    }\n  }, firstNameError))), /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, \"Last Name *\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"lastName\",\n    type: \"text\",\n    value: lastName,\n    onChange: e => setLastName(e.target.value),\n    inputRef: lastNameInputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }), lastNameError && /*#__PURE__*/React.createElement(Paper, {\n    className: \"error-popup\",\n    elevation: 3,\n    style: {\n      backgroundColor: 'black',\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 25\n    }\n  }, lastNameError))), /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, \"Email *\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"email\",\n    type: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    inputRef: emailInputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }), emailError && email.length == 0 && /*#__PURE__*/React.createElement(Paper, {\n    className: \"error-popup\",\n    elevation: 3,\n    style: {\n      backgroundColor: 'black',\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 25\n    }\n  }, emailError)), email.length < 3 && emailError && !isValidEmail(email) && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 75\n    }\n  }, \"Enter valid email.\")), /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, \"Password *\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"password\",\n    type: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    inputRef: passwordInputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }), passwordError && /*#__PURE__*/React.createElement(Paper, {\n    className: \"error-popup\",\n    elevation: 3,\n    style: {\n      backgroundColor: 'black',\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 25\n    }\n  }, passwordError))), /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"contactNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, \"Mobile No. *\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"contactNumber\",\n    type: \"number\",\n    value: contactNumber,\n    onChange: e => setContactNumber(e.target.value),\n    inputRef: contactNumberInputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }), contactNumber.length == 0 && contactNumberError && /*#__PURE__*/React.createElement(Paper, {\n    className: \"error-popup\",\n    elevation: 3,\n    style: {\n      backgroundColor: 'black',\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 25\n    }\n  }, contactNumberError)), contactNumber.length > 0 && contactNumber.length < 11 && contactNumberError && !isValidContactNumber(contactNumber) && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 136\n    }\n  }, \"Invalid mobile number format.\")), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    className: \"registerButton\",\n    style: {\n      margin: 'auto',\n      display: 'block',\n      marginTop: '25px'\n    },\n    color: \"primary\",\n    onClick: handleRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }, \"REGISTER\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"success\",\n    style: {\n      color: 'success',\n      marginTop: '25px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }, registrationMessage));\n};\nexport default Register;","map":{"version":3,"names":["React","useState","useRef","useEffect","FormControl","InputLabel","Input","Button","Paper","Register","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","contactNumber","setContactNumber","firstNameError","setFirstNameError","lastNameError","setLastNameError","emailError","setEmailError","passwordError","setPasswordError","contactNumberError","setContactNumberError","registrationMessage","setRegistrationMessage","firstNameInputRef","lastNameInputRef","emailInputRef","passwordInputRef","contactNumberInputRef","current","focus","handleRegister","emptyFieldErrorMsg","isValidEmail","signInData","mobile","emailId","response","fetch","method","headers","body","JSON","stringify","ok","Error","loginResponse","loginData","json","authToken","alert","localStorage","setItem","error","console","message","isValidContactNumber","contactNumberRegex","test","emailRegex","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","margin","htmlFor","id","type","value","onChange","e","target","inputRef","elevation","style","backgroundColor","color","length","variant","display","marginTop","onClick"],"sources":["/Users/vikabber/Desktop/Projects/Projects/BookMyConsultationUI/src/screens/register/Register.js"],"sourcesContent":["// Register.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport { FormControl, InputLabel, Input, Button, Paper } from '@material-ui/core';\nimport './Register.css'\n\nconst Register = () => {\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [contactNumber, setContactNumber] = useState('');\n    const [firstNameError, setFirstNameError] = useState('');\n    const [lastNameError, setLastNameError] = useState('');\n    const [emailError, setEmailError] = useState('');\n    const [passwordError, setPasswordError] = useState('');\n    const [contactNumberError, setContactNumberError] = useState('');\n    const [registrationMessage, setRegistrationMessage] = useState('');\n\n    const firstNameInputRef = useRef(null);\n    const lastNameInputRef = useRef(null);\n    const emailInputRef = useRef(null);\n    const passwordInputRef = useRef(null);\n    const contactNumberInputRef = useRef(null);\n\n    useEffect(() => {\n        if (firstNameError) {\n            firstNameInputRef.current.focus();\n        }\n        if (lastNameError) {\n            lastNameInputRef.current.focus();\n        }\n        if (emailError) {\n            emailInputRef.current.focus();\n        }\n        if (passwordError) {\n            passwordInputRef.current.focus();\n        }\n        if (contactNumberError) {\n            contactNumberInputRef.current.focus();\n        }\n    }, [firstNameError, lastNameError, emailError, passwordError, contactNumberError]);\n    \n\n    const handleRegister = async () => {\n        const emptyFieldErrorMsg = 'Please fill out this field';\n        // Reset errors and messages\n        setFirstNameError('');\n        setLastNameError('');\n        setEmailError('');\n        setPasswordError('');\n        setContactNumberError('');\n        setRegistrationMessage('');\n    \n        // Basic validation\n        if (!firstName) {\n            setFirstNameError(emptyFieldErrorMsg);\n            return;\n        }\n        if (!lastName) {\n            setLastNameError(emptyFieldErrorMsg);\n            return;\n        }\n        if (!email) {\n            setEmailError(emptyFieldErrorMsg);\n            return;\n        }\n        if (!password) {\n            setPasswordError(emptyFieldErrorMsg);\n            return;\n        }\n        if (!contactNumber) {\n            setContactNumberError(emptyFieldErrorMsg);\n            return;\n        }\n        // if (!isValidContactNumber(contactNumber)) {\n        //     setContactNumberError('Enter a valid mobile number.');\n        //     return;\n        // }\n        if (!isValidEmail(email)) {\n            setEmailError('Enter a valid email.');\n            return;\n        }\n        try {\n            const signInData = {\n                firstName: firstName,\n                lastName: lastName,\n                mobile: contactNumber,\n                password: password,\n                emailId: email\n            };\n    \n            const response = await fetch('http://localhost:8080/users/register', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(signInData),\n            });\n    \n            if (!response.ok) {\n                throw new Error('Registration failed. Please try again.');\n            }\n    \n            // Registration successful\n            setRegistrationMessage('Registration Successful');\n\n\n            const loginResponse = await fetch('http://localhost:8080/auth/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ email, password }), // Use registered email and password for login\n            });\n\n            if (!loginResponse.ok) {\n                throw new Error('Login failed. Please try again.');\n            }\n\n            // Assuming login is successful, extract and store the authentication token\n            const loginData = await loginResponse.json();\n            const authToken = loginData.authToken; // Adjust according to your server response\n            alert(authToken)\n            // Store the authentication token in localStorage\n            localStorage.setItem('authToken', authToken);\n            // localStorage.setItem('isLoggedIn', true);\n            // localStorage.setItem('userId', userId);\n            // localStorage.setItem('userName', userName);\n            // localStorage.setItem('userEmailId', userEmailId);\n\n            // Clear input fields after successful registration\n            setFirstName('');\n            setLastName('');\n            setEmail('');\n            setPassword('');\n            setContactNumber('');\n        } catch (error) {\n            console.error('Registration failed:', error.message);\n            setRegistrationMessage(error.message || 'Registration failed. Please try again.');\n        }\n    };\n    \n    \n\n    const isValidContactNumber = (contactNumber) => {\n        const contactNumberRegex = /^\\d{10}$/;\n        return contactNumberRegex.test(contactNumber);\n    };\n\n    const isValidEmail = (email) => {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return emailRegex.test(email);\n    };\n\n    return (\n        <div className=\"register-form\">\n            <FormControl fullWidth margin=\"normal\">\n                <InputLabel htmlFor=\"firstName\">First Name *</InputLabel>\n                <Input\n                    id=\"firstName\"\n                    type=\"text\"\n                    value={firstName}\n                    onChange={(e) => setFirstName(e.target.value)}\n                    inputRef={firstNameInputRef}\n                />\n                {firstNameError && \n                    <Paper className=\"error-popup\" elevation={3} style={{ backgroundColor: 'black', color: 'white' }}>\n                        <span>{firstNameError}</span>\n                    </Paper>\n                }\n            </FormControl>\n            <FormControl fullWidth margin=\"normal\">\n                <InputLabel htmlFor=\"lastName\">Last Name *</InputLabel>\n                <Input\n                    id=\"lastName\"\n                    type=\"text\"\n                    value={lastName}\n                    onChange={(e) => setLastName(e.target.value)}\n                    inputRef={lastNameInputRef}\n                />\n                {lastNameError && \n                    <Paper className=\"error-popup\" elevation={3} style={{ backgroundColor: 'black', color: 'white' }}>\n                        <span>{lastNameError}</span>\n                    </Paper>\n                }\n            </FormControl>\n            <FormControl fullWidth margin=\"normal\">\n                <InputLabel htmlFor=\"email\">Email *</InputLabel>\n                <Input\n                    id=\"email\"\n                    type=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    inputRef={emailInputRef}\n                />\n                {emailError && email.length == 0 &&\n                    <Paper className=\"error-popup\" elevation={3} style={{ backgroundColor: 'black', color: 'white' }}>\n                        <span>{emailError}</span>\n                    </Paper>\n                }\n                {email.length<3  && emailError && !isValidEmail(email) && <span className=\"error\">Enter valid email.</span>}\n            </FormControl>\n            <FormControl fullWidth margin=\"normal\">\n                <InputLabel htmlFor=\"password\">Password *</InputLabel>\n                <Input\n                    id=\"password\"\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    inputRef={passwordInputRef}\n                />\n                {passwordError && \n                    <Paper className=\"error-popup\" elevation={3} style={{ backgroundColor: 'black', color: 'white' }}>\n                        <span>{passwordError}</span>\n                    </Paper>\n                }\n            </FormControl>\n            <FormControl fullWidth margin=\"normal\">\n                <InputLabel htmlFor=\"contactNumber\">Mobile No. *</InputLabel>\n                <Input\n                    id=\"contactNumber\"\n                    type=\"number\"\n                    value={contactNumber}\n                    onChange={(e) => setContactNumber(e.target.value)}\n                    inputRef={contactNumberInputRef}\n                />\n                {contactNumber.length ==0 && contactNumberError && \n                    <Paper className=\"error-popup\" elevation={3} style={{ backgroundColor: 'black', color: 'white' }}>\n                        <span>{contactNumberError}</span>\n                    </Paper>\n                }\n                {contactNumber.length > 0 && contactNumber.length<11  && contactNumberError && !isValidContactNumber(contactNumber) && <span className=\"error\">Invalid mobile number format.</span>}\n            </FormControl>\n            <Button variant=\"contained\" className=\"registerButton\" style={{ margin: 'auto', display: 'block', marginTop:'25px' }} color=\"primary\" onClick={handleRegister}>\n                REGISTER\n            </Button>\n            <span className=\"success\" style={{ color:'success', marginTop:'25px' }} >{registrationMessage}</span>\n        </div>\n    );\n};\n\nexport default Register;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
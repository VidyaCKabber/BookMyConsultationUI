{"ast":null,"code":"var _jsxFileName = \"/Users/vikabber/Desktop/Projects/Projects/BookMyConsultationUI/src/common/header/Header.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Header.css';\nimport logo from '../../assets/logo.jpeg';\nimport Button from '@material-ui/core/Button';\nimport AuthenticationModal from '../../screens/authentication/AuthenticationModal';\nimport Login from '../../screens/login/Login';\nconst Header = () => {\n  const [isLoginModalOpen, setLoginModalOpen] = useState(false);\n  const [accessToken, setAccessToken] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    // Function to update component state based on localStorage values\n    const updateStateFromLocalStorage = () => {\n      const updatedAccessToken = localStorage.getItem('accessToken');\n      if (updatedAccessToken) {\n        setAccessToken(updatedAccessToken);\n      }\n      const updatedIsLoggedIn = localStorage.getItem('isLoggedIn') === 'true';\n      setIsLoggedIn(updatedIsLoggedIn);\n    };\n\n    // Initial update when the component mounts\n    updateStateFromLocalStorage();\n\n    // Set up a timer to periodically check for changes in localStorage\n    const localStorageTimer = setInterval(() => {\n      updateStateFromLocalStorage();\n    }, 1000); // Adjust the interval as needed (e.g., every second)\n\n    // Clean up the timer on component unmount\n    return () => {\n      clearInterval(localStorageTimer);\n    };\n  }, []); // Empty dependency array ensures the effect runs only once on mount\n\n  const handleLoginModalOpen = () => {\n    setLoginModalOpen(true);\n  };\n  const handleLoginModalClose = () => {\n    setLoginModalOpen(false);\n  };\n  const handleLogout = () => {\n    localStorage.setItem('isLoggedIn', false);\n    localStorage.removeItem('accessToken');\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"Logo\",\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Doctor Finder\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, isLoggedIn ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"Logout\") : /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleLoginModalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(AuthenticationModal, {\n    isOpen: isLoginModalOpen,\n    handleClose: handleLoginModalClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Login, {\n    onClose: handleLoginModalClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  })));\n};\nexport default Header;","map":{"version":3,"names":["React","useState","useEffect","logo","Button","AuthenticationModal","Login","Header","isLoginModalOpen","setLoginModalOpen","accessToken","setAccessToken","isLoggedIn","setIsLoggedIn","updateStateFromLocalStorage","updatedAccessToken","localStorage","getItem","updatedIsLoggedIn","localStorageTimer","setInterval","clearInterval","handleLoginModalOpen","handleLoginModalClose","handleLogout","setItem","removeItem","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","variant","color","onClick","isOpen","handleClose","onClose"],"sources":["/Users/vikabber/Desktop/Projects/Projects/BookMyConsultationUI/src/common/header/Header.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Header.css';\nimport logo from '../../assets/logo.jpeg';\nimport Button from '@material-ui/core/Button';\nimport AuthenticationModal from '../../screens/authentication/AuthenticationModal';\nimport Login from '../../screens/login/Login';\n\nconst Header = () => {\n    const [isLoginModalOpen, setLoginModalOpen] = useState(false);\n    const [accessToken, setAccessToken] = useState('');\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    useEffect(() => {\n        // Function to update component state based on localStorage values\n        const updateStateFromLocalStorage = () => {\n            const updatedAccessToken = localStorage.getItem('accessToken');\n            if (updatedAccessToken) {\n                setAccessToken(updatedAccessToken);\n            }\n    \n            const updatedIsLoggedIn = localStorage.getItem('isLoggedIn') === 'true'; \n            setIsLoggedIn(updatedIsLoggedIn);\n        };\n    \n        // Initial update when the component mounts\n        updateStateFromLocalStorage();\n    \n        // Set up a timer to periodically check for changes in localStorage\n        const localStorageTimer = setInterval(() => {\n            updateStateFromLocalStorage();\n        }, 1000); // Adjust the interval as needed (e.g., every second)\n    \n        // Clean up the timer on component unmount\n        return () => {\n            clearInterval(localStorageTimer);\n        };\n    }, []); // Empty dependency array ensures the effect runs only once on mount\n    \n    \n\n    const handleLoginModalOpen = () => {\n        setLoginModalOpen(true);\n    };\n\n    const handleLoginModalClose = () => {\n        setLoginModalOpen(false);\n    };\n\n    const handleLogout = () => {\n        localStorage.setItem('isLoggedIn', false);\n        localStorage.removeItem('accessToken');\n        setIsLoggedIn(false);\n    };\n\n    return (\n        <div className=\"header\">\n            <div className=\"logo-container\">\n                <img src={logo} alt=\"Logo\" className=\"logo\" />\n                <h3>Doctor Finder</h3>\n            </div>\n            <div className=\"button-container\">\n                {isLoggedIn ? (\n                    <Button variant=\"contained\" color=\"secondary\" onClick={handleLogout}>Logout</Button>\n                ) : (\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleLoginModalOpen}>Login</Button>\n                )}\n            </div>\n            <AuthenticationModal isOpen={isLoginModalOpen} handleClose={handleLoginModalClose} >\n                <Login onClose={handleLoginModalClose} />\n            </AuthenticationModal>\n        </div>\n    );\n}\n\nexport default Header;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,cAAc;AACrB,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,mBAAmB,MAAM,kDAAkD;AAClF,OAAOC,KAAK,MAAM,2BAA2B;AAE7C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACjB,MAAM,CAACC,gBAAgB,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMY,2BAA2B,GAAGA,CAAA,KAAM;MACtC,MAAMC,kBAAkB,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MAC9D,IAAIF,kBAAkB,EAAE;QACpBJ,cAAc,CAACI,kBAAkB,CAAC;MACtC;MAEA,MAAMG,iBAAiB,GAAGF,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,KAAK,MAAM;MACvEJ,aAAa,CAACK,iBAAiB,CAAC;IACpC,CAAC;;IAED;IACAJ,2BAA2B,CAAC,CAAC;;IAE7B;IACA,MAAMK,iBAAiB,GAAGC,WAAW,CAAC,MAAM;MACxCN,2BAA2B,CAAC,CAAC;IACjC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV;IACA,OAAO,MAAM;MACTO,aAAa,CAACF,iBAAiB,CAAC;IACpC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAIR,MAAMG,oBAAoB,GAAGA,CAAA,KAAM;IAC/Bb,iBAAiB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,MAAMc,qBAAqB,GAAGA,CAAA,KAAM;IAChCd,iBAAiB,CAAC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMe,YAAY,GAAGA,CAAA,KAAM;IACvBR,YAAY,CAACS,OAAO,CAAC,YAAY,EAAE,KAAK,CAAC;IACzCT,YAAY,CAACU,UAAU,CAAC,aAAa,CAAC;IACtCb,aAAa,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,oBACIb,KAAA,CAAA2B,aAAA;IAAKC,SAAS,EAAC,QAAQ;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnBlC,KAAA,CAAA2B,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BlC,KAAA,CAAA2B,aAAA;IAAKQ,GAAG,EAAEhC,IAAK;IAACiC,GAAG,EAAC,MAAM;IAACR,SAAS,EAAC,MAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAC9ClC,KAAA,CAAA2B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,eAAiB,CACpB,CAAC,eACNlC,KAAA,CAAA2B,aAAA;IAAKC,SAAS,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC5BtB,UAAU,gBACPZ,KAAA,CAAA2B,aAAA,CAACvB,MAAM;IAACiC,OAAO,EAAC,WAAW;IAACC,KAAK,EAAC,WAAW;IAACC,OAAO,EAAEf,YAAa;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAAc,CAAC,gBAEpFlC,KAAA,CAAA2B,aAAA,CAACvB,MAAM;IAACiC,OAAO,EAAC,WAAW;IAACC,KAAK,EAAC,SAAS;IAACC,OAAO,EAAEjB,oBAAqB;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,OAAa,CAE3F,CAAC,eACNlC,KAAA,CAAA2B,aAAA,CAACtB,mBAAmB;IAACmC,MAAM,EAAEhC,gBAAiB;IAACiC,WAAW,EAAElB,qBAAsB;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9ElC,KAAA,CAAA2B,aAAA,CAACrB,KAAK;IAACoC,OAAO,EAAEnB,qBAAsB;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACvB,CACpB,CAAC;AAEd,CAAC;AAED,eAAe3B,MAAM"},"metadata":{},"sourceType":"module"}